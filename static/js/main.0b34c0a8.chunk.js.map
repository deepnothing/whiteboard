{"version":3,"sources":["App.js","index.js"],"names":["pubnub","PubNub","publishKey","subscribeKey","subscribe","channels","App","props","componentDidMount","addListener","message","MessageEvent","setState","coordinates","changeBlue","color","changeRed","changeYellow","changeGreen","changeBlack","logData","console","log","saveableCanvas","getSaveData","sendData","publish","channel","clearData","clear","state","width","height","brushRadius","lazyRadius","currentVal","document","getElementById","value","this","className","id","style","background","onClick","type","min","max","defaultValue","onInput","bind","undo","marginBottom","margin","onMouseUp","hideGrid","brushColor","ref","canvasDraw","saveData","immediateLoading","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0b34c0a8.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.css';\nimport CanvasDraw from \"react-canvas-draw\";\nimport PubNub from 'pubnub';\n\nconst pubnub = new PubNub({\n  publishKey: 'pub-c-ca5e94e4-fcc4-458e-986d-ce73de6bf1f3',\n  subscribeKey: 'sub-c-b63ff6ae-3d85-11eb-8aa9-b69578166507',\n});\n\n\npubnub.subscribe({\n  channels: ['hello_world']\n});\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      color: \"black\",\n      width: 400,\n      height: 400,\n      brushRadius: 10,\n      lazyRadius: 0,\n\n      coordinates: ''\n\n    }\n\n  };\n\n\n\n  componentDidMount = () => {\n\n    pubnub.addListener({\n\n      message: MessageEvent => {\n\n\n        this.setState({ coordinates: MessageEvent.message })\n\n      }\n    },\n\n    )\n  };\n\n\n  changeBlue = () => {\n    this.setState({ color: 'blue' })\n  };\n  changeRed = () => {\n    this.setState({ color: 'red' })\n  };\n  changeYellow = () => {\n    this.setState({ color: 'yellow' })\n  }\n  changeGreen = () => {\n    this.setState({ color: 'green' })\n  }\n  changeBlack = () => {\n    this.setState({ color: 'black' })\n  }\n\n\n  onInput() {\n    var input = document.getElementById(\"myRange\");\n    var currentVal = input.value;\n    this.setState({\n      brushRadius: currentVal\n    })\n  };\n\n  logData = () => {\n    console.log(this.saveableCanvas.getSaveData())\n  };\n\n\n  sendData = () => {\n\n    pubnub.publish({\n      message: this.saveableCanvas.getSaveData(),\n      channel: 'hello_world'\n    })\n  }\n\n  clearData = () => {\n\n    this.saveableCanvas.clear()\n    //////////////////////////////////////////////////////\n\n    pubnub.publish({\n      message: this.saveableCanvas.getSaveData(),\n      channel: 'hello_world'\n    })\n\n\n  }\n\n\n  render() {\n\n    return (\n      <div>\n\n\n\n\n        <div className=\"maincontainer\" >\n          <div className=\"colorwrapper\">\n            <div id=\"spacing\"></div>\n            <b>Choose a color</b>\n            <br></br>\n\n            <div id=\"spacing\">\n              <div className=\"black circle\" style={{ background: \"black\" }} onClick={this.changeBlack}></div>\n            </div>\n            <div id=\"spacing\">\n              <div className=\"blue circle\" style={{ background: \"blue\" }} onClick={this.changeBlue}></div>\n            </div>\n            <div id=\"spacing\">\n              <div className=\"red circle\" style={{ background: \"red\" }} onClick={this.changeRed}></div>\n            </div>\n            <div id=\"spacing\">\n              <div className=\"yelow circle\" style={{ background: 'yellow' }} onClick={this.changeYellow}></div>\n            </div>\n            <div id=\"spacing\">\n              <div className=\"green circle\" style={{ background: 'green' }} onClick={this.changeGreen}></div>\n            </div>\n            <br></br>\n            <p>adjust brush size </p>\n\n            <div>{this.state.brushRadius}</div>\n            <input type=\"range\" min={1} max={20} defaultValue={10} className=\"slider\" id=\"myRange\" onInput={this.onInput.bind(this)}></input>\n\n            <br></br>\n\n            <div className='tools'>\n\n              <div id=\"button\" onClick={this.clearData}>\n                Erase\n              </div>\n\n              <div id=\"button\"\n                onClick={() => {\n                  this.saveableCanvas.undo();\n                }}>\n\n                Undo Last\n          </div>\n              <div id=\"button\"\n                onClick={this.logData}>\n                Log Canvas Coordinates\n                </div>\n\n\n\n\n            </div>\n\n          </div>\n\n          <div id=\"spacing\"></div>\n\n\n          <div className=\"framecontainer\">\n            <h1 style={{ marginBottom: '0px' }}>MULTI-USER WHITEBOARD</h1>\n            <p style={{ margin: '0px' }}>Start by opening in another device or tab to collaborate</p>\n\n\n            <div id=\"drawCanvas\" className=\"frame\" onMouseUp={this.sendData}>\n\n\n              <CanvasDraw\n                hideGrid\n                style={{ width: '100%', height: '100%' }}\n                brushColor={this.state.color}\n                brushRadius={this.state.brushRadius}\n                lazyRadius={this.state.lazyRadius}\n                ref={canvasDraw => (this.saveableCanvas = canvasDraw)}\n                saveData={\n                  this.state.coordinates\n                }\n                immediateLoading={true}\n\n              />\n\n            </div>\n\n          </div>\n\n\n        </div>\n\n\n      </div >\n    )\n\n  };\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}